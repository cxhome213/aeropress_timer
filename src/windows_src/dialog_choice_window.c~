/**
 * Example implementation of the dialog choice UI pattern.
 */

#include "dialog_choice_window.h"
#include "aileya.h"

static Window *s_main_window;
static BitmapLayer *s_icon_layer;

static GBitmap *s_icon_bitmap;

void select_single_click_handler(ClickRecognizerRef recognizer, void *context) {
  aileya_push();
}

static void window_load(Window *window) {
	static MenuLayer *aileya_menu_layer;
  Layer *window_layer = window_get_root_layer(window);
  GRect bounds = layer_get_bounds(window_layer);

  s_icon_bitmap = gbitmap_create_with_resource(RESOURCE_ID_CONFIRM);
  GRect bitmap_bounds = gbitmap_get_bounds(s_icon_bitmap);

	s_icon_layer = bitmap_layer_create(GRect(0, 0, bitmap_bounds.size.w, bitmap_bounds.size.h));
  bitmap_layer_set_bitmap(s_icon_layer, s_icon_bitmap);
  bitmap_layer_set_compositing_mode(s_icon_layer, GCompOpSet);

  layer_add_child(window_layer, bitmap_layer_get_layer(s_icon_layer));
}

static void window_unload(Window *window) {
  bitmap_layer_destroy(s_icon_layer);

  gbitmap_destroy(s_icon_bitmap); 

  window_destroy(window);
  s_main_window = NULL;
}

void config_provider(Window *window) {
 // single click / repeat-on-hold config:
  window_single_repeating_click_subscribe(BUTTON_ID_SELECT, 1000, select_single_click_handler);
}

void dialog_choice_window_push() {
  if(!s_main_window) {
    s_main_window = window_create();
    window_set_background_color(s_main_window, GColorJaegerGreen);
    window_set_window_handlers(s_main_window, (WindowHandlers) {
        .load = window_load,
        .unload = window_unload,
    });
  }
  window_stack_push(s_main_window, true);

	window_set_click_config_provider(s_main_window, (ClickConfigProvider) config_provider);
}
